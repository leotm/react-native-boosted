# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/25.0.8221429
  ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk/25.0.8221429

# TODO: Avoid brutally editing/setting ndk.dir in local.properties

jobs:
  build-android:

    runs-on: ubuntu-latest

    env:
      ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/25.0.8221429
      ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk/25.0.8221429

    steps:

    - uses: actions/checkout@v3

    - name: Set up JDK 18
      uses: actions/setup-java@v3.2.0
      with:
        java-version: 18
        distribution: temurin
        cache: 'gradle'

    - name: Debug info
      run: npx react-native info

    # (Standalone toolchains obsolete)
    # Ubuntu 20.04: r21e, r22, r23b, Custom: r24+
    - name: Set up NDK 25 Beta 2
      uses: nttld/setup-ndk@v1.0.6
      id: setup-ndk
      with:
        ndk-version: r25-beta2

    - name: Debug info
      run: npx react-native info

    - name: Manually set NDK env vars
      run: |
        export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk/25.0.8221429
        export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk/25.0.8221429

    - name: Debug info
      run: npx react-native info

    - name: Install all project dependencies
      run: yarn
      
    - name: /usr/local/lib/android/sdk/ndk
      run: |
        cd /usr/local/lib/android/sdk/ndk
        ls
    #   cp -rf 25.0.8221429/* ndk-bundle

    - name: steps.setup-ndk.outputs.ndk-path
      run: |
        echo "${{ steps.setup-ndk.outputs.ndk-path }}"

    # Avoid poisoned cache problems
    - name: Delete Android build pre-computed outputs
      if: always()
      uses: gradle/gradle-build-action@v2.1.5
      with:
        arguments: clean
        build-root-directory: android
      env:
        ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
#         ANDROID_NDK_ROOT: /usr/local/lib/android/sdk/ndk/25.0.8221429

    - name: Build application Debug APK with Gradle
      uses: gradle/gradle-build-action@v2.1.5
      with:
        arguments: assembleDebug
        build-root-directory: android

    - name: Build application Release APK with Gradle
      uses: gradle/gradle-build-action@v2.1.5
      with:
        arguments: assembleRelease
        build-root-directory: android

#     - name: Build project Make-based (not CMake)
#       run: |
#         /usr/local/lib/android/sdk/ndk/x.x.x/ndk-build
#         NDK_PROJECT_PATH=null
#         APP_BUILD_SCRIPT=/home/runner/work/react-native-template-new-architecture/react-native-template-new-architecture/node_modules/react-native/ReactAndroid/src/main/jni/react/jni/Android.mk
#         NDK_APPLICATION_MK=/home/runner/work/react-native-template-new-architecture/react-native-template-new-architecture/node_modules/react-native/ReactAndroid/src/main/jni/Application.mk

# E2E Release APK for Detox per VM image architecture for AVD
# --active-arch-only
# - M1: -PreactNativeArchitectures=arm64-v8a
# - Other: -PreactNativeArchitectures=x86_64

# Release AAB/APK with all 4 ABIs
# - 1 AAB/APK, 1 upload
# - Consider ccache without matrix
# - Parallelise each ABI via matrix
#   - Upload each ABI seperately
# - Consider sccache
#   - Bigger organisation/team
#   - Running more frequent builds
